#!/usr/bin/env bash
set -e
set -o noclobber
set -o pipefail

readonly USERNAME="toh995"
readonly -a DEFAULT_PACKAGES=(
	# x11
	xorg-server
	xorg-xinit

	# window manager
	i3-gaps
	dmenu

	# fonts
	noto-fonts

	# terminal emulator
	rxvt-unicode

	# utilities
	git
	sudo
	zsh
)


####################
# HELPER FUNCTIONS #
####################
user_exists() {
	local -r username="${1}"
	# silent, it just sets the exit code
	id "${username}" &>/dev/null
}


##################
# MAIN FUNCTIONS #
##################
upgrade_all_packages() {
	pacman -Syu --noconfirm
}

install_packages() {
	pacman -S --noconfirm "${@}"
}

setup_sudo() {
	local -r OVERRIDE_FILE_NAME="/etc/sudoers.d/override"

	{
		echo "Defaults passwd_timeout=0"
		echo "Defaults timestamp_timeout=30"
		echo "Defaults insults"
		echo ""
		echo "%wheel ALL=(ALL:ALL) ALL"
	} > "${OVERRIDE_FILE_NAME}"

	# double check that the file is correct
	visudo --check --file="${OVERRIDE_FILE_NAME}"
}

create_user() {
	local -r username="${1}"

	echo "Creating new user ${username}..."
	useradd --create-home --gid=users --groups=wheel --shell=/usr/bin/zsh "${username}"
	passwd "${username}" # todo: what if the user typos the password input?
}

install_default_packages() {
	local -r packages="$(get_default_packages)}"
	pacman -S --noconfirm --needed "${packages[@]}"
}

setup_git_bare_repo() {
	local -r username="${1}"
	local -r user_home="$( eval echo "~${username}" )"
	local -r repo_dir="${user_home}/.dotfiles"
	local -r repo_url="https://github.com/toh995/dotfiles.git"

	sudo -u "$username" \
		bash -c "
			mkdir -p ${repo_dir}
			git clone --bare ${repo_url} ${repo_dir}
			git --git-dir=${repo_dir} --work-tree=${user_home} checkout
		"
}

########
# MAIN #
########
main() {
	upgrade_all_packages
	install_packages "${DEFAULT_PACKAGES[@]}"
	setup_sudo
	user_exists "${USERNAME}" || create_user "${USERNAME}"
	setup_git_bare_repo "${USERNAME}"
}

main "${@}"
